# HIP process parameters from Reardon 1998 "HIP 9.0 User's Guide"
# this should really be encapsulated in some nice small functions

import numpy as np

TArray = np.array(
    [298, 308, 318, 328, 338, 348, 358, 368, 378, 388, 398, 408, 418, 428, 438,
     448, 458, 468, 478, 488, 498, 508, 518, 528, 538, 548, 558, 568, 578, 588,
     598, 608, 618, 628, 638, 648, 658, 668, 678, 688, 698, 708, 718, 728, 738,
     748, 758, 768, 778, 788, 798, 808, 818, 828, 838, 848, 858, 868, 878, 888,
     898, 908, 918, 928, 938, 948, 958, 968, 978, 988, 998, 1008, 1018, 1028,
     1038, 1048, 1058, 1068, 1078, 1088, 1098, 1108, 1118, 1128, 1138, 1148,
     1158, 1168, 1178, 1188, 1198, 1208, 1218, 1228, 1238, 1248, 1258, 1268,
     1278, 1288, 1298, 1308, 1318, 1328, 1338, 1348, 1358, 1368, 1378, 1388,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1383, 1368, 1353, 1338, 1323, 1308, 1293, 1277, 1262, 1247, 1232,
     1217, 1202, 1187, 1172, 1157, 1142, 1127, 1112, 1097, 1082, 1066, 1051,
     1036, 1021, 1006, 991, 976, 961, 946, 931, 916, 901, 886, 871, 856, 840,
     825, 810, 795, 780, 765, 750, 735, 720, 705, 690, 675, 660, 645, 630, 614,
     599, 584, 569, 554, 539, 524, 509, 494, 479, 464, 449, 434, 419, 403, 388,
     373, 358, 343, 328, 313, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
     298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
     298, 298, 298, 298, 298, 298])

PArray = np.array(
    [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 3.8, 7.4, 11.1, 14.8, 18.4, 22.1, 25.7,
     29.4, 33.1, 36.7, 40.4, 44.1, 47.7, 51.4, 55.1, 58.7, 62.4, 66.0, 69.7,
     73.4, 77.0, 80.7, 84.4, 88.0, 91.7, 95.3, 99.0, 102.7, 106.3, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0,
     108.5, 107.0, 105.5, 104.0, 102.5, 101.0, 99.5, 98.0, 96.5, 94.9, 93.4,
     91.9, 90.4, 88.9, 87.4, 85.9, 84.4, 82.9, 81.4, 79.9, 78.4, 76.9, 75.4,
     73.9, 72.4, 70.9, 69.4, 67.8, 66.3, 64.8, 63.3, 61.8, 60.3, 58.8, 57.3,
     55.8, 54.3, 52.8, 51.3, 49.8, 48.3, 46.8, 45.3, 43.8, 42.3, 40.7, 39.2,
     37.7, 36.2, 34.7, 33.2, 31.7, 30.2, 28.7, 27.2, 25.7, 24.2, 22.7, 21.2,
     19.7, 18.2, 16.7, 15.2, 13.6, 12.1, 10.6, 9.1, 7.6, 6.1, 4.6, 3.1, 1.6,
     0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     0.1]) * 1000000
